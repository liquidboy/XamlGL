<Application
    xmlns="http://schemas.xamlgl.com/xamlgl"
    xmlns:x="http://schemas.xamlgl.com/xamlgl/x"
    ThemeName="Metro">
  <Grid x:Name="layoutRoot">
    <Scene x:Name="main🎬">
      <Code>
        <![CDATA[
          // Toggle system on and off
          var toggle = false;
          var particles = this.VisualTreeHelper.FindByName("particles");
          document.onkeydown = (e)=>{
              if(e.key == "a"){
                  if(!toggle){
                      particles.bjsCtrl.start();
                  }else{
                      particles.bjsCtrl.stop();
                  }
                  toggle = !toggle;
              }
          }
        ]]>
      </Code>
    </Scene>

    <Camera x:Name="arcRotate📷" Type="ArcRotateCamera" AlphaCalculated="-Math.PI / 2" Beta="Math.PI / 4" Radius="3" 
            Target="Vector3(0, 3, 0)" Scene="main🎬"></Camera>

    <Light x:Name="light1" Type="HemisphericLight" Direction="Vector3(0, 1, 0)" Intensity="0.7" Scene="main🎬" ></Light>

    <Box x:Name="emitter0🎆" Width="0.1" Scene="main🎬" IsVisible="false"></Box>

    <ParticleSystem x:Name="ps1" Scene="main🎬" Capacity="300" Type="ParticleSystem"
                    ParticleTexture= "/assets/textures/flare.png"
                    MinSize="0.1" MaxSize="0.1" 
                    MinEmitPower="0" MaxEmitPower="0" EmitterName="emitter0🎆" 
                    MinEmitBox="BABYLON.Vector3(0, 0, 0)" MaxEmitBox="Vector3(0, 0, 0)"
                    Direction1="Vector3(-1, 1, -1)" Direction2="Vector3(1, 1, 1)">
      <Code>
        <![CDATA[
          let scene = this.VisualTreeHelper.FindByName("main🎬");
        
          this.bjsCtrl.emitter = new BABYLON.Mesh("", scene.bjsCtrl);
          this.bjsCtrl.createDirectedCylinderEmitter(0.1, 0, 0)
          this.bjsCtrl.addColorGradient(0, new BABYLON.Color4(0,1,0,0));
          this.bjsCtrl.addColorGradient(0.5, new BABYLON.Color4(1,0,0,1));
        ]]>
      </Code>
    </ParticleSystem>

    <SubEmitter x:Name="subEmitter0" ParticleSystem="ps1" Type="SubEmitterType.ATTACHED" 
                InheritDirection="true" InheritedVelocityAmount="1" Scene="main🎬" ></SubEmitter>

    <ParticleSystem x:Name="ps2" Scene="main🎬" Capacity="50" Type="ParticleSystem"
                  ParticleTexture= "/assets/textures/flare.png"
                  MinSize="0.1" MaxSize="0.1" 
                  maxEmitBox="Vector3(0, 0, 0)" minEmitBox="Vector3(0, 0, 0)"
                  MinEmitPower="-10" MaxEmitPower="-10" EmitterName="emitter0🎆" 
                  Direction1="Vector3(0,1,0)" Direction2="Vector3(0,1, 0)">
      <Code>
        <![CDATA[
          let scene = this.VisualTreeHelper.FindByName("main🎬");
        
          this.bjsCtrl.emitter = new BABYLON.AbstractMesh("", scene.bjsCtrl);
          this.bjsCtrl.addColorGradient(0, new BABYLON.Color4(0,1,1,0));
          this.bjsCtrl.addColorGradient(0.5, new BABYLON.Color4(1,1,0,1));
        ]]>
      </Code>
    </ParticleSystem>
    
    <SubEmitter x:Name="subEmitter2" ParticleSystem="ps2" Type="SubEmitterType.ATTACHED" 
                InheritDirection="true" Scene="main🎬" ></SubEmitter>
    

    <ParticleSystem x:Name="particles" Scene="main🎬" Capacity="2000" Type="ParticleSystem"
                    ParticleTexture="/assets/textures/flare.png"
                    Emitter="Vector3(0, 0, 0)" Color1="Color4(1, 0.1, 0.1, 1.0)"
                    Color2="Color4(1, 0.1, 0.1, 1.0)" ColorDead="Color4(.2, 0, 0, 0.0)"
                    MinSize="0.2" MaxSize="0.2"
                    MinLifeTime="0.9" MaxLifeTime="0.9"
                    EmitRate="30"
                    BlendMode="BABYLON.ParticleSystem.BLENDMODE_ONEONE"
                    MinAngularSpeed="0" MaxAngularSpeed="Math.PI"
                    MinEmitPower="5" MaxEmitPower="5"
                    UpdateSpeed="0.005"
                    Direction1="Vector3(0.5,0.5,0.5).normalize()" Direction2="Vector3(-0.5,0.5,-0.5).normalize()"
                    MaxEmitBox="Vector3(0, 0, 0)" MinEmitBox="Vector3(0, 0, 0)"
                    >
      <Code>
        <![CDATA[
          let scene = this.VisualTreeHelper.FindByName("main🎬");
          let subEmitter0 = this.VisualTreeHelper.FindByName("subEmitter0");
          let subEmitter2 = this.VisualTreeHelper.FindByName("subEmitter2");

          let createFireworkSubEmitter = (color, type, name) => {
              var particleSystem1 = new BABYLON.ParticleSystem(name, 2000, scene.bjsCtrl);
              particleSystem1.emitter = new BABYLON.Mesh("", scene.bjsCtrl);
              //Texture of each particle
              particleSystem1.particleTexture = new BABYLON.Texture("/assets/textures/flare.png", scene.bjsCtrl);
              if (type === 0) {
                  particleSystem1.createConeEmitter(2);
              } else if (type === 1) {
                  particleSystem1.createSphereEmitter(2);
              }
              particleSystem1.color1 = color;
              particleSystem1.color2 = color;
              particleSystem1.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);
              particleSystem1.subEmitters = [];
              particleSystem1.minSize = 0.1;
              particleSystem1.maxSize = 0.5;
              particleSystem1.minLifeTime = .3;
              particleSystem1.maxLifeTime = .5;
              particleSystem1.manualEmitCount = 50;
              particleSystem1.disposeOnStop = true;
              particleSystem1.blendMode = BABYLON.ParticleSystem.BLENDMODE_ONEONE;
              particleSystem1.minAngularSpeed = 0;
              particleSystem1.maxAngularSpeed = Math.PI;
              particleSystem1.minEmitPower = 5;
              particleSystem1.maxEmitPower = 6;
              particleSystem1.updateSpeed = 0.005;
              var se = new BABYLON.SubEmitter(particleSystem1)
              se.inheritDirection = true
              return se;
          };
        
          this.bjsCtrl.subEmitters = [
            [subEmitter0, subEmitter2, createFireworkSubEmitter(new BABYLON.Color4(0, 1, 0, 1.0), 0,"first")], 
            [subEmitter0, subEmitter2, createFireworkSubEmitter(new BABYLON.Color4(0, 0, 1, 1.0), 1,"second")]
          ];
        
        
        ]]>
      </Code>
    </ParticleSystem>

  </Grid>
    <!-- https://www.babylonjs-playground.com/#T0L01N#50 -->
</Application>